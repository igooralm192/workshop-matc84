{"version":3,"sources":["space-invaders/js/starfield.js","space-invaders/js/spaceinvaders.js","components/SpaceInvaders.js","components/Header.js","components/Menu.js","components/Content.js","components/App.js","index.js"],"names":["Starfield","this","fps","canvas","width","minVelocity","maxVelocity","stars","intervalId","Star","x","y","size","velocity","prototype","initialise","div","self","containerDiv","window","innerWidth","height","innerHeight","onresize","event","draw","document","createElement","appendChild","start","i","Math","random","setInterval","update","stop","clearInterval","dt","length","star","ctx","getContext","fillStyle","fillRect","game","Game","config","bombRate","bombMinVelocity","bombMaxVelocity","invaderInitialVelocity","invaderAcceleration","invaderDropDistance","rocketVelocity","rocketMaxFireRate","gameWidth","gameHeight","debugMode","invaderRanks","invaderFiles","shipSpeed","levelDifficultyMultiplier","pointsPerInvader","limitLevelIncrease","lives","gameBounds","left","top","right","bottom","score","level","stateStack","pressedKeys","gameCanvas","sounds","previousX","WelcomeState","GameOverState","PlayState","invaderCurrentVelocity","invaderCurrentDropDistance","invadersAreDropping","lastRocketTime","ship","invaders","rockets","bombs","PauseState","LevelIntroState","countdownMessage","Ship","Rocket","Bomb","Invader","rank","file","type","Sounds","audioContext","setGame","newGame","moveToState","state","currentState","leave","pop","enter","push","test","location","href","console","log","GameLoop","mute","pushState","popState","keyDown","keyCode","touchstart","s","touchend","touchmove","e","currentX","changedTouches","pageX","keyUp","init","loadSound","clearRect","font","textBaseline","textAlign","fillText","levelMultiplier","limitLevel","ranks","files","invaderVelocity","invaderNextVelocity","fireRocket","bomb","splice","rocket","hitLeft","hitRight","hitBottom","newx","invader","newy","bang","j","playSound","frontRankInvaders","textYpos","info","strokeStyle","strokeRect","Date","valueOf","undefined","countdown","context","AudioContext","webkitAudioContext","name","url","req","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","buffer","send","source","createBufferSource","connect","destination","Component","withStyles","theme","root","display","appBar","zIndex","drawer","flexShrink","drawerPaper","content","flexGrow","padding","spacing","toolbar","mixins","withTheme","props","classes","AppBar","position","style","backgroundColor","className","Toolbar","IconButton","color","onClick","menuClick","Typography","fontFamily","variant","align","menuHeader","menuItem","fontSize","menuItemIcon","marginRight","fontWeight","menuItemIconXML","menuItemIconJSON","items","title","icon","Drawer","paper","menuOpen","onClose","closeMenu","List","map","item","ListItem","key","button","ListItemText","clsx","App","debounceChange","lodash","debounce","handleChange","value","setState","openMenu","React","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1e98d5fb.chunk.js","sourcesContent":["/*\n\tStarfield lets you take a div and turn it into a starfield.\n\n*/\n\n//\tDefine the starfield class.\nfunction Starfield() {\n\tthis.fps = 30;\n\tthis.canvas = null;\n\tthis.width = 0;\n\tthis.width = 0;\n\tthis.minVelocity = 15;\n\tthis.maxVelocity = 30;\n\tthis.stars = 100;\n\tthis.intervalId = 0;\n}\n\n//\tThe main function - initialises the starfield.\nStarfield.prototype.initialise = function(div) {\n\tvar self = this;\n\n\t//\tStore the div.\n\tthis.containerDiv = div;\n\tself.width = window.innerWidth;\n\tself.height = window.innerHeight;\n\n\twindow.onresize = function(event) {\n\t\tself.width = window.innerWidth;\n\t\tself.height = window.innerHeight;\n\t\tself.canvas.width = self.width;\n\t\tself.canvas.height = self.height;\n\t\tself.draw();\n \t}\n\n\t//\tCreate the canvas.\n\tvar canvas = document.createElement('canvas');\n\tdiv.appendChild(canvas);\n\tthis.canvas = canvas;\n\tthis.canvas.width = this.width;\n\tthis.canvas.height = this.height;\n};\n\nStarfield.prototype.start = function() {\n\n\t//\tCreate the stars.\n\tvar stars = [];\n\tfor(var i=0; i<this.stars; i++) {\n\t\tstars[i] = new Star(Math.random()*this.width, Math.random()*this.height, Math.random()*3+1,\n\t\t (Math.random()*(this.maxVelocity - this.minVelocity))+this.minVelocity);\n\t}\n\tthis.stars = stars;\n\n\tvar self = this;\n\t//\tStart the timer.\n\tthis.intervalId = setInterval(function() {\n\t\tself.update();\n\t\tself.draw();\t\n\t}, 1000 / this.fps);\n};\n\nStarfield.prototype.stop = function() {\n\tclearInterval(this.intervalId);\n};\n\nStarfield.prototype.update = function() {\n\tvar dt = 1 / this.fps;\n\n\tfor(var i=0; i<this.stars.length; i++) {\n\t\tvar star = this.stars[i];\n\t\tstar.y += dt * star.velocity;\n\t\t//\tIf the star has moved from the bottom of the screen, spawn it at the top.\n\t\tif(star.y > this.height) {\n\t\t\tthis.stars[i] = new Star(Math.random()*this.width, 0, Math.random()*3+1, \n\t\t \t(Math.random()*(this.maxVelocity - this.minVelocity))+this.minVelocity);\n\t\t}\n\t}\n};\n\nStarfield.prototype.draw = function() {\n\n\t//\tGet the drawing context.\n\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t//\tDraw the background.\n \tctx.fillStyle = '#000000';\n\tctx.fillRect(0, 0, this.width, this.height);\n\n\t//\tDraw stars.\n\tctx.fillStyle = '#ffffff';\n\tfor(var i=0; i<this.stars.length;i++) {\n\t\tvar star = this.stars[i];\n\t\tctx.fillRect(star.x, star.y, star.size, star.size);\n\t}\n};\n\nfunction Star(x, y, size, velocity) {\n\tthis.x = x;\n\tthis.y = y; \n\tthis.size = size;\n\tthis.velocity = velocity;\n}\n\nexport { Starfield };","/*\n  spaceinvaders.js\n\n  the core logic for the space invaders game.\n\n*/\n\n/*  \n    Game Class\n\n    The Game class represents a Space Invaders game.\n    Create an instance of it, change any of the default values\n    in the settings, and call 'start' to run the game.\n\n    Call 'initialise' before 'start' to set the canvas the game\n    will draw to.\n\n    Call 'moveShip' or 'shipFire' to control the ship.\n\n    Listen for 'gameWon' or 'gameLost' events to handle the game\n    ending.\n*/\n\nvar game = null;\n\n//  Constants for the keyboard.\nvar KEY_LEFT = 37;\nvar KEY_RIGHT = 39;\nvar KEY_SPACE = 32;\n\n//  Creates an instance of the Game class.\nfunction Game() {\n\n    //  Set the initial config.\n    this.config = {\n        bombRate: 0.05,\n        bombMinVelocity: 50,\n        bombMaxVelocity: 50,\n        invaderInitialVelocity: 25,\n        invaderAcceleration: 0,\n        invaderDropDistance: 20,\n        rocketVelocity: 120,\n        rocketMaxFireRate: 2,\n        gameWidth: 400,\n        gameHeight: 300,\n        fps: 50,\n        debugMode: false,\n        invaderRanks: 5,\n        invaderFiles: 10,\n        shipSpeed: 120,\n        levelDifficultyMultiplier: 0.2,\n        pointsPerInvader: 5,\n        limitLevelIncrease: 25\n    };\n\n    //  All state is in the variables below.\n    this.lives = 3;\n    this.width = 0;\n    this.height = 0;\n    this.gameBounds = {left: 0, top: 0, right: 0, bottom: 0};\n    this.intervalId = 0;\n    this.score = 0;\n    this.level = 1;\n\n    //  The state stack.\n    this.stateStack = [];\n\n    //  Input/output\n    this.pressedKeys = {};\n    this.gameCanvas =  null;\n\n    //  All sounds.\n    this.sounds = null;\n\n    //  The previous x position, used for touch.\n    this.previousX = 0;\n}\n\nGame.prototype.setGame = function(newGame) {\n    game = newGame;\n}\n\n//  Initialis the Game with a canvas.\nGame.prototype.initialise = function(gameCanvas) {\n\n    //  Set the game canvas.\n    this.gameCanvas = gameCanvas;\n\n    //  Set the game width and height.\n    this.width = gameCanvas.width;\n    this.height = gameCanvas.height;\n\n    //  Set the state game bounds.\n    this.gameBounds = {\n        left: gameCanvas.width / 2 - this.config.gameWidth / 2,\n        right: gameCanvas.width / 2 + this.config.gameWidth / 2,\n        top: gameCanvas.height / 2 - this.config.gameHeight / 2,\n        bottom: gameCanvas.height / 2 + this.config.gameHeight / 2,\n    };\n};\n\nGame.prototype.moveToState = function(state) {\n \n   //  If we are in a state, leave it.\n   if(this.currentState() && this.currentState().leave) {\n     this.currentState().leave(game);\n     this.stateStack.pop();\n   }\n   \n   //  If there's an enter function for the new state, call it.\n   if(state.enter) {\n     state.enter(game);\n   }\n \n   //  Set the current state.\n   this.stateStack.pop();\n   this.stateStack.push(state);\n };\n\n//  Start the Game.\nGame.prototype.start = function() {\n\n    //  Move into the 'welcome' state.\n    this.moveToState(new WelcomeState());\n\n    //  Set the game variables.\n    this.lives = 3;\n    this.config.debugMode = /debug=true/.test(window.location.href);\n    console.log(this)\n    //  Start the game loop.\n    game = this;\n    this.intervalId = setInterval(function () { GameLoop(game);}, 1000 / this.config.fps);\n\n};\n\n//  Returns the current state.\nGame.prototype.currentState = function() {\n    return this.stateStack.length > 0 ? this.stateStack[this.stateStack.length - 1] : null;\n};\n\n//  Mutes or unmutes the game.\nGame.prototype.mute = function(mute) {\n\n    //  If we've been told to mute, mute.\n    if(mute === true) {\n        this.sounds.mute = true;\n    } else if (mute === false) {\n        this.sounds.mute = false;\n    } else {\n        // Toggle mute instead...\n        this.sounds.mute = this.sounds.mute ? false : true;\n    }\n};\n\n//  The main loop.\nfunction GameLoop(game) {\n    var currentState = game.currentState();\n    if(currentState) {\n\n        //  Delta t is the time to update/draw.\n        var dt = 1 / game.config.fps;\n        \n        //  Get the drawing context.\n        var ctx = game.gameCanvas.getContext(\"2d\");\n        \n        //  Update if we have an update function. Also draw\n        //  if we have a draw function.\n        if(currentState.update) {\n            currentState.update(game, dt);\n        }\n        if(currentState.draw) {\n            currentState.draw(game, dt, ctx);\n        }\n    }\n}\n\nGame.prototype.pushState = function(state) {\n\n    //  If there's an enter function for the new state, call it.\n    if(state.enter) {\n        state.enter(game);\n    }\n    //  Set the current state.\n    this.stateStack.push(state);\n};\n\nGame.prototype.popState = function() {\n\n    //  Leave and pop the state.\n    if(this.currentState()) {\n        if(this.currentState().leave) {\n            this.currentState().leave(game);\n        }\n\n        //  Set the current state.\n        this.stateStack.pop();\n    }\n};\n\n//  The stop function stops the game.\nGame.prototype.stop = function Stop() {\n    clearInterval(this.intervalId);\n};\n\n//  Inform the game a key is down.\nGame.prototype.keyDown = function(keyCode) {\n    this.pressedKeys[keyCode] = true;\n    //  Delegate to the current state too.\n    if(this.currentState() && this.currentState().keyDown) {\n        this.currentState().keyDown(this, keyCode);\n    }\n};\n\nGame.prototype.touchstart = function(s) {\n    if(this.currentState() && this.currentState().keyDown) {\n        this.currentState().keyDown(this, KEY_SPACE);\n    }    \n};\n\nGame.prototype.touchend = function(s) {\n    delete this.pressedKeys[KEY_RIGHT];\n    delete this.pressedKeys[KEY_LEFT];\n};\n\nGame.prototype.touchmove = function(e) {\n\tvar currentX = e.changedTouches[0].pageX;\n    if (this.previousX > 0) {\n        if (currentX > this.previousX) {\n            delete this.pressedKeys[KEY_LEFT];\n            this.pressedKeys[KEY_RIGHT] = true;\n        } else {\n            delete this.pressedKeys[KEY_RIGHT];\n            this.pressedKeys[KEY_LEFT] = true;\n        }\n    }\n    this.previousX = currentX;\n};\n\n//  Inform the game a key is up.\nGame.prototype.keyUp = function(keyCode) {\n    delete this.pressedKeys[keyCode];\n    //  Delegate to the current state too.\n    if(this.currentState() && this.currentState().keyUp) {\n        this.currentState().keyUp(this, keyCode);\n    }\n};\n\nfunction WelcomeState() {\n\n}\n\nWelcomeState.prototype.enter = function(game) {\n\n    // Create and load the sounds.\n    game.sounds = new Sounds();\n    game.sounds.init();\n    game.sounds.loadSound('shoot', 'sounds/shoot.wav');\n    game.sounds.loadSound('bang', 'sounds/bang.wav');\n    game.sounds.loadSound('explosion', 'sounds/explosion.wav');\n};\n\nWelcomeState.prototype.update = function (game, dt) {\n\n\n};\n\nWelcomeState.prototype.draw = function(game, dt, ctx) {\n\n    //  Clear the background.\n    ctx.clearRect(0, 0, game.width, game.height);\n\n    ctx.font=\"30px Arial\";\n    ctx.fillStyle = '#ffffff';\n    ctx.textBaseline=\"middle\"; \n    ctx.textAlign=\"center\"; \n    ctx.fillText(\"Space Invaders\", game.width / 2, game.height/2 - 40); \n    ctx.font=\"16px Arial\";\n\n    ctx.fillText(\"Press 'Space' or touch to start.\", game.width / 2, game.height/2); \n};\n\nWelcomeState.prototype.keyDown = function(game, keyCode) {\n    if(keyCode == KEY_SPACE) {\n        //  Space starts the game.\n        game.level = 1;\n        game.score = 0;\n        game.lives = 3;\n        game.moveToState(new LevelIntroState(game.level));\n    }\n};\n\nfunction GameOverState() {\n\n}\n\nGameOverState.prototype.update = function(game, dt) {\n\n};\n\nGameOverState.prototype.draw = function(game, dt, ctx) {\n\n    //  Clear the background.\n    ctx.clearRect(0, 0, game.width, game.height);\n\n    ctx.font=\"30px Arial\";\n    ctx.fillStyle = '#ffffff';\n    ctx.textBaseline=\"center\"; \n    ctx.textAlign=\"center\"; \n    ctx.fillText(\"Game Over!\", game.width / 2, game.height/2 - 40); \n    ctx.font=\"16px Arial\";\n    ctx.fillText(\"You scored \" + game.score + \" and got to level \" + game.level, game.width / 2, game.height/2);\n    ctx.font=\"16px Arial\";\n    ctx.fillText(\"Press 'Space' to play again.\", game.width / 2, game.height/2 + 40);   \n};\n\nGameOverState.prototype.keyDown = function(game, keyCode) {\n    if(keyCode == KEY_SPACE) {\n        //  Space restarts the game.\n        game.lives = 3;\n        game.score = 0;\n        game.level = 1;\n        game.moveToState(new LevelIntroState(1));\n    }\n};\n\n//  Create a PlayState with the game config and the level you are on.\nfunction PlayState(config, level) {\n    this.config = config;\n    this.level = level;\n\n    //  Game state.\n    this.invaderCurrentVelocity =  10;\n    this.invaderCurrentDropDistance =  0;\n    this.invadersAreDropping =  false;\n    this.lastRocketTime = null;\n\n    //  Game entities.\n    this.ship = null;\n    this.invaders = [];\n    this.rockets = [];\n    this.bombs = [];\n}\n\nPlayState.prototype.enter = function(game) {\n\n    //  Create the ship.\n    this.ship = new Ship(game.width / 2, game.gameBounds.bottom);\n\n    //  Setup initial state.\n    this.invaderCurrentVelocity =  10;\n    this.invaderCurrentDropDistance =  0;\n    this.invadersAreDropping =  false;\n\n    //  Set the ship speed for this level, as well as invader params.\n    var levelMultiplier = this.level * this.config.levelDifficultyMultiplier;\n    var limitLevel = (this.level < this.config.limitLevelIncrease ? this.level : this.config.limitLevelIncrease);\n    this.shipSpeed = this.config.shipSpeed;\n    this.invaderInitialVelocity = this.config.invaderInitialVelocity + 1.5 * (levelMultiplier * this.config.invaderInitialVelocity);\n    this.bombRate = this.config.bombRate + (levelMultiplier * this.config.bombRate);\n    this.bombMinVelocity = this.config.bombMinVelocity + (levelMultiplier * this.config.bombMinVelocity);\n    this.bombMaxVelocity = this.config.bombMaxVelocity + (levelMultiplier * this.config.bombMaxVelocity);\n    this.rocketMaxFireRate = this.config.rocketMaxFireRate + 0.4 * limitLevel;\n\n    //  Create the invaders.\n    var ranks = this.config.invaderRanks + 0.1 * limitLevel;\n    var files = this.config.invaderFiles + 0.2 * limitLevel;\n    var invaders = [];\n    for(var rank = 0; rank < ranks; rank++){\n        for(var file = 0; file < files; file++) {\n            invaders.push(new Invader(\n                (game.width / 2) + ((files/2 - file) * 200 / files),\n                (game.gameBounds.top + rank * 20),\n                rank, file, 'Invader'));\n        }\n    }\n    this.invaders = invaders;\n    this.invaderCurrentVelocity = this.invaderInitialVelocity;\n    this.invaderVelocity = {x: -this.invaderInitialVelocity, y:0};\n    this.invaderNextVelocity = null;\n};\n\nPlayState.prototype.update = function(game, dt) {\n    \n    //  If the left or right arrow keys are pressed, move\n    //  the ship. Check this on ticks rather than via a keydown\n    //  event for smooth movement, otherwise the ship would move\n    //  more like a text editor caret.\n    if(game.pressedKeys[KEY_LEFT]) {\n        this.ship.x -= this.shipSpeed * dt;\n    }\n    if(game.pressedKeys[KEY_RIGHT]) {\n        this.ship.x += this.shipSpeed * dt;\n    }\n    if(game.pressedKeys[KEY_SPACE]) {\n        this.fireRocket();\n    }\n\n    //  Keep the ship in bounds.\n    if(this.ship.x < game.gameBounds.left) {\n        this.ship.x = game.gameBounds.left;\n    }\n    if(this.ship.x > game.gameBounds.right) {\n        this.ship.x = game.gameBounds.right;\n    }\n\n    //  Move each bomb.\n    for(var i=0; i<this.bombs.length; i++) {\n        var bomb = this.bombs[i];\n        bomb.y += dt * bomb.velocity;\n\n        //  If the rocket has gone off the screen remove it.\n        if(bomb.y > this.height) {\n            this.bombs.splice(i--, 1);\n        }\n    }\n\n    //  Move each rocket.\n    for(i=0; i<this.rockets.length; i++) {\n        var rocket = this.rockets[i];\n        rocket.y -= dt * rocket.velocity;\n\n        //  If the rocket has gone off the screen remove it.\n        if(rocket.y < 0) {\n            this.rockets.splice(i--, 1);\n        }\n    }\n\n    //  Move the invaders.\n    var hitLeft = false, hitRight = false, hitBottom = false;\n    for(i=0; i<this.invaders.length; i++) {\n        var invader = this.invaders[i];\n        var newx = invader.x + this.invaderVelocity.x * dt;\n        var newy = invader.y + this.invaderVelocity.y * dt;\n        if(hitLeft == false && newx < game.gameBounds.left) {\n            hitLeft = true;\n        }\n        else if(hitRight == false && newx > game.gameBounds.right) {\n            hitRight = true;\n        }\n        else if(hitBottom == false && newy > game.gameBounds.bottom) {\n            hitBottom = true;\n        }\n\n        if(!hitLeft && !hitRight && !hitBottom) {\n            invader.x = newx;\n            invader.y = newy;\n        }\n    }\n\n    //  Update invader velocities.\n    if(this.invadersAreDropping) {\n        this.invaderCurrentDropDistance += this.invaderVelocity.y * dt;\n        if(this.invaderCurrentDropDistance >= this.config.invaderDropDistance) {\n            this.invadersAreDropping = false;\n            this.invaderVelocity = this.invaderNextVelocity;\n            this.invaderCurrentDropDistance = 0;\n        }\n    }\n    //  If we've hit the left, move down then right.\n    if(hitLeft) {\n        this.invaderCurrentVelocity += this.config.invaderAcceleration;\n        this.invaderVelocity = {x: 0, y:this.invaderCurrentVelocity };\n        this.invadersAreDropping = true;\n        this.invaderNextVelocity = {x: this.invaderCurrentVelocity , y:0};\n    }\n    //  If we've hit the right, move down then left.\n    if(hitRight) {\n        this.invaderCurrentVelocity += this.config.invaderAcceleration;\n        this.invaderVelocity = {x: 0, y:this.invaderCurrentVelocity };\n        this.invadersAreDropping = true;\n        this.invaderNextVelocity = {x: -this.invaderCurrentVelocity , y:0};\n    }\n    //  If we've hit the bottom, it's game over.\n    if(hitBottom) {\n        game.lives = 0;\n    }\n    \n    //  Check for rocket/invader collisions.\n    for(i=0; i<this.invaders.length; i++) {\n        var invader = this.invaders[i];\n        var bang = false;\n\n        for(var j=0; j<this.rockets.length; j++){\n            var rocket = this.rockets[j];\n\n            if(rocket.x >= (invader.x - invader.width/2) && rocket.x <= (invader.x + invader.width/2) &&\n                rocket.y >= (invader.y - invader.height/2) && rocket.y <= (invader.y + invader.height/2)) {\n                \n                //  Remove the rocket, set 'bang' so we don't process\n                //  this rocket again.\n                this.rockets.splice(j--, 1);\n                bang = true;\n                game.score += this.config.pointsPerInvader;\n                break;\n            }\n        }\n        if(bang) {\n            this.invaders.splice(i--, 1);\n            game.sounds.playSound('bang');\n        }\n    }\n\n    //  Find all of the front rank invaders.\n    var frontRankInvaders = {};\n    for(var i=0; i<this.invaders.length; i++) {\n        var invader = this.invaders[i];\n        //  If we have no invader for game file, or the invader\n        //  for game file is futher behind, set the front\n        //  rank invader to game one.\n        if(!frontRankInvaders[invader.file] || frontRankInvaders[invader.file].rank < invader.rank) {\n            frontRankInvaders[invader.file] = invader;\n        }\n    }\n\n    //  Give each front rank invader a chance to drop a bomb.\n    for(var i=0; i<this.config.invaderFiles; i++) {\n        var invader = frontRankInvaders[i];\n        if(!invader) continue;\n        var chance = this.bombRate * dt;\n        if(chance > Math.random()) {\n            //  Fire!\n            this.bombs.push(new Bomb(invader.x, invader.y + invader.height / 2, \n                this.bombMinVelocity + Math.random()*(this.bombMaxVelocity - this.bombMinVelocity)));\n        }\n    }\n\n    //  Check for bomb/ship collisions.\n    for(var i=0; i<this.bombs.length; i++) {\n        var bomb = this.bombs[i];\n        if(bomb.x >= (this.ship.x - this.ship.width/2) && bomb.x <= (this.ship.x + this.ship.width/2) &&\n                bomb.y >= (this.ship.y - this.ship.height/2) && bomb.y <= (this.ship.y + this.ship.height/2)) {\n            this.bombs.splice(i--, 1);\n            game.lives--;\n            game.sounds.playSound('explosion');\n        }\n                \n    }\n\n    //  Check for invader/ship collisions.\n    for(var i=0; i<this.invaders.length; i++) {\n        var invader = this.invaders[i];\n        if((invader.x + invader.width/2) > (this.ship.x - this.ship.width/2) && \n            (invader.x - invader.width/2) < (this.ship.x + this.ship.width/2) &&\n            (invader.y + invader.height/2) > (this.ship.y - this.ship.height/2) &&\n            (invader.y - invader.height/2) < (this.ship.y + this.ship.height/2)) {\n            //  Dead by collision!\n            game.lives = 0;\n            game.sounds.playSound('explosion');\n        }\n    }\n\n    //  Check for failure\n    if(game.lives <= 0) {\n        game.moveToState(new GameOverState());\n    }\n\n    //  Check for victory\n    if(this.invaders.length === 0) {\n        game.score += this.level * 50;\n        game.level += 1;\n        game.moveToState(new LevelIntroState(game.level));\n    }\n};\n\nPlayState.prototype.draw = function(game, dt, ctx) {\n\n    //  Clear the background.\n    ctx.clearRect(0, 0, game.width, game.height);\n    \n    //  Draw ship.\n    ctx.fillStyle = '#999999';\n    ctx.fillRect(this.ship.x - (this.ship.width / 2), this.ship.y - (this.ship.height / 2), this.ship.width, this.ship.height);\n\n    //  Draw invaders.\n    ctx.fillStyle = '#006600';\n    for(var i=0; i<this.invaders.length; i++) {\n        var invader = this.invaders[i];\n        ctx.fillRect(invader.x - invader.width/2, invader.y - invader.height/2, invader.width, invader.height);\n    }\n\n    //  Draw bombs.\n    ctx.fillStyle = '#ff5555';\n    for(var i=0; i<this.bombs.length; i++) {\n        var bomb = this.bombs[i];\n        ctx.fillRect(bomb.x - 2, bomb.y - 2, 4, 4);\n    }\n\n    //  Draw rockets.\n    ctx.fillStyle = '#ff0000';\n    for(var i=0; i<this.rockets.length; i++) {\n        var rocket = this.rockets[i];\n        ctx.fillRect(rocket.x, rocket.y - 2, 1, 4);\n    }\n\n    //  Draw info.\n    var textYpos = game.gameBounds.bottom + ((game.height - game.gameBounds.bottom) / 2) + 14/2;\n    ctx.font=\"14px Arial\";\n    ctx.fillStyle = '#ffffff';\n    var info = \"Lives: \" + game.lives;\n    ctx.textAlign = \"left\";\n    ctx.fillText(info, game.gameBounds.left, textYpos);\n    info = \"Score: \" + game.score + \", Level: \" + game.level;\n    ctx.textAlign = \"right\";\n    ctx.fillText(info, game.gameBounds.right, textYpos);\n\n    //  If we're in debug mode, draw bounds.\n    if(this.config.debugMode) {\n        ctx.strokeStyle = '#ff0000';\n        ctx.strokeRect(0,0,game.width, game.height);\n        ctx.strokeRect(game.gameBounds.left, game.gameBounds.top,\n            game.gameBounds.right - game.gameBounds.left,\n            game.gameBounds.bottom - game.gameBounds.top);\n    }\n\n};\n\nPlayState.prototype.keyDown = function(game, keyCode) {\n\n    if(keyCode == KEY_SPACE) {\n        //  Fire!\n        this.fireRocket();\n    }\n    if(keyCode == 80) {\n        //  Push the pause state.\n        game.pushState(new PauseState());\n    }\n};\n\nPlayState.prototype.keyUp = function(game, keyCode) {\n\n};\n\nPlayState.prototype.fireRocket = function() {\n    //  If we have no last rocket time, or the last rocket time \n    //  is older than the max rocket rate, we can fire.\n    if(this.lastRocketTime === null || ((new Date()).valueOf() - this.lastRocketTime) > (1000 / this.rocketMaxFireRate))\n    {   \n        //  Add a rocket.\n        this.rockets.push(new Rocket(this.ship.x, this.ship.y - 12, this.config.rocketVelocity));\n        this.lastRocketTime = (new Date()).valueOf();\n\n        //  Play the 'shoot' sound.\n        game.sounds.playSound('shoot');\n    }\n};\n\nfunction PauseState() {\n\n}\n\nPauseState.prototype.keyDown = function(game, keyCode) {\n\n    if(keyCode == 80) {\n        //  Pop the pause state.\n        game.popState();\n    }\n};\n\nPauseState.prototype.draw = function(game, dt, ctx) {\n\n    //  Clear the background.\n    ctx.clearRect(0, 0, game.width, game.height);\n\n    ctx.font=\"14px Arial\";\n    ctx.fillStyle = '#ffffff';\n    ctx.textBaseline=\"middle\";\n    ctx.textAlign=\"center\";\n    ctx.fillText(\"Paused\", game.width / 2, game.height/2);\n    return;\n};\n\n/*  \n    Level Intro State\n\n    The Level Intro state shows a 'Level X' message and\n    a countdown for the level.\n*/\nfunction LevelIntroState(level) {\n    this.level = level;\n    this.countdownMessage = \"3\";\n}\n\nLevelIntroState.prototype.update = function(game, dt) {\n\n    //  Update the countdown.\n    if(this.countdown === undefined) {\n        this.countdown = 3; // countdown from 3 secs\n    }\n    this.countdown -= dt;\n\n    if(this.countdown < 2) { \n        this.countdownMessage = \"2\"; \n    }\n    if(this.countdown < 1) { \n        this.countdownMessage = \"1\"; \n    } \n    if(this.countdown <= 0) {\n        //  Move to the next level, popping this state.\n        game.moveToState(new PlayState(game.config, this.level));\n    }\n\n};\n\nLevelIntroState.prototype.draw = function(game, dt, ctx) {\n\n    //  Clear the background.\n    ctx.clearRect(0, 0, game.width, game.height);\n\n    ctx.font=\"36px Arial\";\n    ctx.fillStyle = '#ffffff';\n    ctx.textBaseline=\"middle\"; \n    ctx.textAlign=\"center\"; \n    ctx.fillText(\"Level \" + this.level, game.width / 2, game.height/2);\n    ctx.font=\"24px Arial\";\n    ctx.fillText(\"Ready in \" + this.countdownMessage, game.width / 2, game.height/2 + 36);      \n    return;\n};\n\n\n/*\n \n  Ship\n\n  The ship has a position and that's about it.\n\n*/\nfunction Ship(x, y) {\n    this.x = x;\n    this.y = y;\n    this.width = 20;\n    this.height = 16;\n}\n\n/*\n    Rocket\n\n    Fired by the ship, they've got a position, velocity and state.\n\n    */\nfunction Rocket(x, y, velocity) {\n    this.x = x;\n    this.y = y;\n    this.velocity = velocity;\n}\n\n/*\n    Bomb\n\n    Dropped by invaders, they've got position, velocity.\n\n*/\nfunction Bomb(x, y, velocity) {\n    this.x = x;\n    this.y = y;\n    this.velocity = velocity;\n}\n \n/*\n    Invader \n\n    Invader's have position, type, rank/file and that's about it. \n*/\n\nfunction Invader(x, y, rank, file, type) {\n    this.x = x;\n    this.y = y;\n    this.rank = rank;\n    this.file = file;\n    this.type = type;\n    this.width = 18;\n    this.height = 14;\n}\n\n/*\n    Game State\n\n    A Game State is simply an update and draw proc.\n    When a game is in the state, the update and draw procs are\n    called, with a dt value (dt is delta time, i.e. the number)\n    of seconds to update or draw).\n\n*/\nfunction GameState(updateProc, drawProc, keyDown, keyUp, enter, leave) {\n    this.updateProc = updateProc;\n    this.drawProc = drawProc;\n    this.keyDown = keyDown;\n    this.keyUp = keyUp;\n    this.enter = enter;\n    this.leave = leave;\n}\n\n/*\n\n    Sounds\n\n    The sounds class is used to asynchronously load sounds and allow\n    them to be played.\n\n*/\nfunction Sounds() {\n\n    //  The audio context.\n    this.audioContext = null;\n\n    //  The actual set of loaded sounds.\n    this.sounds = {};\n}\n\nSounds.prototype.init = function() {\n\n    //  Create the audio context, paying attention to webkit browsers.\n    var context = window.AudioContext || window.webkitAudioContext;\n    this.audioContext = new context();\n    this.mute = false;\n};\n\nSounds.prototype.loadSound = function(name, url) {\n\n    //  Reference to ourselves for closures.\n    var self = this;\n\n    //  Create an entry in the sounds object.\n    this.sounds[name] = null;\n\n    //  Create an asynchronous request for the sound.\n    var req = new XMLHttpRequest();\n    req.open('GET', url, true);\n    req.responseType = 'arraybuffer';\n    req.onload = function() {\n        self.audioContext.decodeAudioData(req.response, function(buffer) {\n            self.sounds[name] = {buffer: buffer};\n        });\n    };\n    try {\n      req.send();\n    } catch(e) {\n      console.log(\"An exception occured getting sound the sound \" + name + \" this might be \" +\n         \"because the page is running from the file system, not a webserver.\");\n      console.log(e);\n    }\n};\n\nSounds.prototype.playSound = function(name) {\n\n    //  If we've not got the sound, don't bother playing it.\n    if(this.sounds[name] === undefined || this.sounds[name] === null || this.mute === true) {\n        return;\n    }\n\n    //  Create a sound source, set the buffer, connect to the speakers and\n    //  play the sound.\n    var source = this.audioContext.createBufferSource();\n    source.buffer = this.sounds[name].buffer;\n    source.connect(this.audioContext.destination);\n    source.start(0);\n};\n\nexport { Game };","import React, {Component} from 'react';\nimport {Starfield} from '../space-invaders/js/starfield.js';\nimport {Game} from '../space-invaders/js/spaceinvaders.js';\n\nclass SpaceInvaders extends Component {\n    constructor(props) {\n        super(props);\n\n\n    }\n\n    componentDidMount() {\n        //  Create the starfield.\n        var container = document.getElementById('starfield');\n        var starfield = new Starfield();\n        starfield.initialise(container);\n        starfield.start();\n\n        //  Setup the canvas.\n        var canvas = document.getElementById(\"gameCanvas\");\n        canvas.width = 800;\n        canvas.height = 600;\n\n        //  Create the game.\n        var game = new Game();\n        game.setGame(game);\n        //  Initialise it with the game canvas.\n        game.initialise(canvas);\n\n        //  Start the game.\n        game.start();\n\n        //  Listen for keyboard events.\n        window.addEventListener(\"keydown\", function keydown(e) {\n            var keycode = e.which || window.event.keycode;\n            //  Supress further processing of left/right/space (37/29/32)\n            if(keycode == 37 || keycode == 39 || keycode == 32) {\n                e.preventDefault();\n            }\n            game.keyDown(keycode);\n\n        });\n        window.addEventListener(\"keyup\", function keydown(e) {\n            var keycode = e.which || window.event.keycode;\n            game.keyUp(keycode);\n        });\n\n        window.addEventListener(\"touchstart\", function (e) {\n            this.console.log('oi')\n            game.touchstart(e);\n        }, false);\n\n        window.addEventListener('touchend', function(e){\n            game.touchend(e);\n        }, false);\n\n        window.addEventListener('touchmove', function(e){\n            game.touchmove(e);\n        }, false);\n\n        function toggleMute() {\n            game.mute();\n            document.getElementById(\"muteLink\").innerText = game.sounds.mute ? \"unmute\" : \"mute\";\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"main-box\" >\n                <div id=\"starfield\"></div>\n                <div id=\"gamecontainer\">\n                    <canvas id=\"gameCanvas\"></canvas>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SpaceInvaders;","import React from 'react';\nimport {AppBar, Toolbar, Typography, IconButton} from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    toolbar: theme.mixins.toolbar,\n  });\n\nfunction Header(props) {\n    const {classes} = props;\n    return (\n        <AppBar\n            position=\"fixed\"\n            style={{backgroundColor: '#349ad8'}}\n            className={classes.appBar}\n        >\n            <Toolbar>\n\t\t\t\t<IconButton\n\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\tonClick={() => props.menuClick()}\n\t\t\t\t>\n\t\t\t\t\t<MenuIcon/>\n\t\t\t\t</IconButton>\n                <Typography style={{width: '100%', fontFamily: 'Ubuntu'}} variant=\"h6\" align=\"center\">\n                    Workshop <b>XML + JSON</b>\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default withStyles(styles, {withTheme: true})(Header);\n\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Drawer, Button, Typography, ListItem, List, ListItemText } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n      width: drawerWidth,\n\t  flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n\ttoolbar: theme.mixins.toolbar,\n\tmenuHeader: {\n\t\tpadding: theme.spacing(2)\n\t},\n\tmenuItem: {\n\t\tfontFamily: 'Ubuntu',\n\t\tfontSize: '1.15em'\n\t},\n\tmenuItemIcon: {\n\t\tmarginRight: '5px',\n\t\tfontWeight: 'bold',\n\t\tfontFamily: 'Varela Round, sans-serif'\n\t},\n\tmenuItemIconXML: {\n\t\tcolor: '#ff9100',\n\t},\n\tmenuItemIconJSON: {\n\t\tcolor: '#9f6bab',\n\t},\n});\n\n\n\nfunction Menu(props) {\n\tconst {classes} = props;\n\t\n\tconst items = [\n\t\t{\n\t\t\ttitle: 'XML',\n\t\t\ticon: '</>',\n\t\t\tstyle: classes.menuItemIconXML\n\t\t},\n\t\t{\n\t\t\ttitle: 'JSON',\n\t\t\ticon: '{ ; }',\n\t\t\tstyle: classes.menuItemIconJSON\n\t\t}\n\t]\n\n\treturn (\n        <Drawer\n            className={classes.drawer}\n            variant=\"temporary\"\n            classes={{paper: classes.drawerPaper}}\n\t\t\topen={props.menuOpen}\n\t\t\tonClose={() => props.closeMenu()}\n        >   \n\t\t\t<div className={classes.menuHeader}>\n\t\t\t\t<Typography variant=\"h5\" style={{fontFamily: 'Ubuntu'}}>Desafios</Typography>\n\t\t\t</div>\n            <List>\n\t\t\t\t{\n\t\t\t\t\titems.map((item, i) => (\n\t\t\t\t\t\t<ListItem key={i} button>\n\t\t\t\t\t\t\t<ListItemText>\n\t\t\t\t\t\t\t\t<Typography className={classes.menuItem}>\n\t\t\t\t\t\t\t\t\t<span className={clsx(item.style, classes.menuItemIcon)}>{item.icon}</span>\n\t\t\t\t\t\t\t\t\t<span>{item.title}</span>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</ListItemText>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</List>\n        </Drawer>\n    )\n}\n\nexport default withStyles(styles, {withTheme: true})(Menu);","import React from 'react';\nimport { Drawer, Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    toolbar: theme.mixins.toolbar,\n});\n\nfunction Content(props) {\n    const { classes } = props;\n    return (\n        <div className={classes.content}>\n\n        </div>\n    )\n}\n\nexport default withStyles(styles, {withTheme: true})(Content);","import React from 'react';\nimport lodash from 'lodash';\n\nimport Ace from 'react-ace';\nimport \"brace/mode/json\";\nimport 'brace/theme/github';\n\nimport SpaceInvaders from './SpaceInvaders';\nimport Header from './Header';\nimport Menu from './Menu';\nimport Content from './Content';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t\n\t\tthis.state = {\n\t\t\tmenuOpen: false\n\t\t}\n\n\t\tthis.debounceChange = lodash.debounce(this.handleChange, 200);\n\t}\n\n\thandleChange(value) {\t\n\t\tconsole.log(value);\n\t}\n\n\topenMenu() {\n\t\tthis.setState({menuOpen: true});\n\t}\n\n\tcloseMenu() {\n\t\tthis.setState({menuOpen: false});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t\n\t\t\t\t<Header menuClick={() => this.openMenu()}/>\n\t\t\t\t<Menu menuOpen={this.state.menuOpen} closeMenu={() => this.closeMenu()}/>\n\t\t\t\t<Content/>\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './assets/css/index.css';\nimport App from './components/App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n"],"sourceRoot":""}